{"version":3,"sources":["components/post.js","components/main.js","components/login.js","apicalls/removepost.js","apicalls/flagpost.js","components/postinfo.js","apicalls/makecomment.js","components/commentform.js","apicalls/getcommentspost.js","apicalls/removecomment.js","apicalls/flagcomment.js","components/commententry.js","components/commentlist.js","components/postdetail.js","apicalls/makepost.js","components/postform.js","components/makepost.js","components/sidebar.js","components/admin.js","apicalls/getpostsmonth.js","components/maincontainer.js","App.js","reportWebVitals.js","index.js"],"names":["Post","props","useState","style","setStyle","useEffect","ypos","xpos","color","className","onClick","e","setID","id","stopPropagation","clickHandler","title","Main","container","useRef","current","getElement","scrollTo","ref","hideScrollbars","valid","clickX","clientX","scrollLeft","clickY","clientY","scrollTop","setCoords","setmakePost","posts","map","val","is_admin","Login","pword","setPword","placeholder","value","onChange","newpword","target","required","maxlength","type","preventDefault","checkpword","removePost","token","resp","fetch","method","headers","then","json","flagPost","PostInfo","flagged","setFlagged","currpost","src","validated","RemovePost","reset","FlagPost","date","text","makeComment","post","body","JSON","stringify","CommentForm","setText","newtext","MakeComment","incComments","getCommentsPost","removeComment","flagComment","CommentEntry","RemoveComment","FlagComment","CommentList","comments","i","PostDetail","setComments","numcomments","setNumComments","getCommentsPosts","toString","class","makePost","PostForm","setTitle","setColor","colors","onSubmit","console","log","MakePost","newtitle","classN","setClassN","coords","SideBar","years","setYears","months","setMonths","monthdic","dateinfo","temp_y","temp_m","this_year","start_year","push","t","j","this_month","start_month","Fragment","showsidebar","setShowSidebar","open","m","setMonth","setYear","year","month","Admin","showform","setShowForm","setToken","getPostsMonth","MainContainer","sha512","require","today","Date","getMonth","getFullYear","locked","setLocked","setValidated","postID","setPosts","setCurrpost","String","find","checkPword","toLowerCase","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.571e07ea.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nconst Post = (props) => {\n    const [style, setStyle] = useState()\n    const clickHandler = (e) => {\n        props.setID(props.id)\n        e.stopPropagation();\n    }\n    useEffect(() => {\n        setStyle({ 'top': `${props.ypos}px`, 'left': `${props.xpos}px`, 'backgroundColor': `${props.color}` })\n    }, [, props])\n    return (\n        <div className=\"element\" onClick={(e) => clickHandler(e)} style={style}>\n            <p>\n                {props.title}\n            </p>\n        </div>\n    )\n}\nexport default Post","import React, { useState, useRef, useEffect } from 'react'\nimport ScrollContainer from 'react-indiana-drag-scroll'\nimport Post from './post'\n\nconst Main = (props) => {\n    const container = useRef(null);\n    const clickHandler = (e) => {\n        var clickX = e.clientX + container.current.getElement().scrollLeft;\n        var clickY = e.clientY + container.current.getElement().scrollTop;\n        props.setCoords([clickX, clickY])\n        props.setmakePost(true)\n    }\n\n    useEffect(() => {\n        if (container.current) {\n            //maybe we don't need depending on how it looks later\n            container.current.getElement().scrollTo(800, 512);\n        }\n    }, []);\n    return (\n        <ScrollContainer className=\"scroll-container\" ref={container} hideScrollbars={false}>\n            <div className=\"main\" onClick={(e) => { if (props.valid) { clickHandler(e); } }}>\n                {\n                    props.posts ?\n                        props.posts.map((val, e) => {\n                            return (<Post\n                                id={val.id}\n                                title={val.title}\n                                xpos={val.xpos}\n                                ypos={val.ypos}\n                                color={val.color}\n                                is_admin={val.is_admin}\n                                setID={props.setID}\n                            />)\n                        }) :\n                        null\n                }\n            </div>\n        </ScrollContainer >\n    )\n}\n\nexport default Main;","import React, { useState } from 'react'\n\nconst Login = (props) => {\n    const [pword, setPword] = useState('')\n    const changePword = (newpword) => {\n        setPword(newpword.target.value)\n    }\n    return (\n        <div>\n            <form className=\"mainblock\">\n                <input className=\"posttitleinp loginput\" placeholder=\"Enter Password\" value={pword} onChange={changePword} required=\"required\" maxlength=\"50\" />\n                <input className=\"passinput\" type=\"submit\" onClick={(e) => { e.preventDefault(); props.checkpword(pword) }}></input>\n            </form>\n        </div>\n    )\n}\nexport default Login;\n","const removePost = (id, token = \"\") => {\n    const resp = fetch(`https://messageboard-back.herokuapp.com/api/posts/${id}/remove_post/`, {\n        method: 'DELETE',\n        headers: {\n            'Content-Type': 'application/json',\n            'token': token\n        }\n    }).then(resp => resp.json())\n    return resp\n}\n\nexport default removePost;\n","const flagPost = (id) => {\n    const resp = fetch(`https://messageboard-back.herokuapp.com/api/posts/${id}/flag_post/`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    }).then(resp => resp.json())\n    return resp\n}\n\nexport default flagPost;\n","import React, { useState } from 'react'\nimport RemovePost from '../apicalls/removepost'\nimport FlagPost from '../apicalls/flagpost'\n\nconst PostInfo = (props) => {\n    const [flagged, setFlagged] = useState(false)\n    return (\n        <div>\n            <div className=\"titletext\">\n                <h1>{props.currpost ? props.currpost.title : ''}</h1>\n                <div className=\"verified\">\n                    <div className=\"hiddeninfo\">\n                        <span>Verified User</span>\n                    </div>\n                    {props.currpost && props.currpost.is_admin ?\n                        <img className=\"checkmark\" src=\"https://cdn-icons-png.flaticon.com/512/3699/3699516.png\" /> :\n                        null\n                    }\n                </div>\n                <div className=\"delete\">\n                    {props.currpost && props.validated ?\n                        <img className=\"checkmark\" onClick={() => { RemovePost(props.currpost.id, props.token).then(() => props.reset()) }} src=\"https://cdn-icons-png.flaticon.com/512/3096/3096687.png\" /> :\n                        <img className=\"checkmark\" onClick={() => { FlagPost(props.currpost.id); setFlagged(true) }} style={{ 'display': `${flagged ? \"none\" : \"\"}` }} src=\"https://cdn-icons-png.flaticon.com/512/985/985382.png\" />}\n                </div>\n                <div className=\"exitbutton\" >\n                    {props.currpost ? <button onClick={() => props.reset()} >X</button> : null}\n                </div>\n            </div>\n            <h2>{props.currpost ? props.currpost.date : ''}</h2>\n            <h2>{props.currpost ? props.currpost.text : ''}</h2>\n            { props.currpost ? <hr /> : null}\n        </div >\n    )\n}\nexport default PostInfo;\n","const makeComment = (text, post, token = \"\") => {\n    const resp = fetch(`https://messageboard-back.herokuapp.com/api/comments/make_comment/`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'token': token\n        },\n        body: JSON.stringify(\n            {\n                'text': text,\n                'post': post,\n            }\n        )\n    }).then(resp => resp.json())\n    return resp\n}\n\nexport default makeComment;\n","import React, { useState } from 'react'\nimport MakeComment from '../apicalls/makecomment'\n\nconst CommentForm = (props) => {\n    const [text, setText] = useState('')\n    const changeText = (newtext) => {\n        setText(newtext.target.value)\n    }\n    return (\n        <div className=\"commentform\">\n            {props.currpost ?\n                <form>\n                    <br />\n                    <textarea value={text} onChange={changeText} className=\"postvalinp\" /><br /><br />\n                    <input type=\"submit\" className=\"submitpost\" onClick={(e) => {\n                        e.preventDefault();\n                        MakeComment(text, props.currpost.id, props.token).then(() => props.incComments());\n                        setText('');\n                    }} />\n                </form>\n                : null}\n        </div>\n    )\n}\nexport default CommentForm;","const getCommentsPost = (post) => {\n    const resp = fetch(`https://messageboard-back.herokuapp.com/api/comments/get_comments_post/`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(\n            {\n                'post': post\n            }\n        )\n    }).then(resp => resp.json())\n    return resp\n}\n\nexport default getCommentsPost;\n","const removeComment = (id, token = \"\") => {\n    const resp = fetch(`https://messageboard-back.herokuapp.com/api/comments/${id}/remove_comment/`, {\n        method: 'DELETE',\n        headers: {\n            'Content-Type': 'application/json',\n            'token': token\n        }\n    }).then(resp => resp.json())\n    return resp\n}\n\nexport default removeComment;\n","const flagComment = (id) => {\n    const resp = fetch(`https://messageboard-back.herokuapp.com/api/comments/${id}/flag_comment/`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    }).then(resp => resp.json())\n    return resp\n}\n\nexport default flagComment;\n","import React, { useState } from 'react'\nimport RemoveComment from '../apicalls/removecomment'\nimport FlagComment from '../apicalls/flagcomment'\n\nconst CommentEntry = (props) => {\n    const [flagged, setFlagged] = useState(false)\n    return (\n        <div className=\"commenttext\">\n            <div className=\"username\">\n                <p>{props.val.is_admin ? \"Verified Commenter\" : \"Anonymous Commenter\"} ({props.val.date})</p>\n                <div className=\"verified\">\n                    <div className=\"hiddeninfo\">\n                        <span>Verified User</span>\n                    </div>\n                    {props.val.is_admin ? <img className=\"checkmark\" src=\"https://cdn-icons-png.flaticon.com/512/3699/3699516.png\" /> : null}\n                </div>\n                <div className=\"delete\">\n                    {props.validated ?\n                        <img className=\"checkmark\" onClick={() => { RemoveComment(props.val.id, props.token).then(() => props.incComments()) }} src=\"https://cdn-icons-png.flaticon.com/512/3096/3096687.png\" /> :\n                        <img className=\"checkmark\" onClick={() => { FlagComment(props.val.id); setFlagged(true) }} style={{ 'display': `${flagged ? \"none\" : ''}` }} src=\"https://cdn-icons-png.flaticon.com/512/985/985382.png\" />\n                    }\n                </div>\n            </div>\n            <p>{props.val.text}</p>\n        </div>\n    )\n}\nexport default CommentEntry;","import React, { useRef } from 'react'\nimport CommentEntry from './commententry'\n\nconst CommentList = (props) => {\n    return (\n        <div className=\"commentdiv\">\n            {\n                props.comments !== [] ?\n                    props.comments.map((val, i) => {\n                        return (\n                            <CommentEntry val={val} incComments={props.incComments} validated={props.validated} token={props.token} />\n                        )\n                    }) : null\n            }\n        </div>\n    )\n}\nexport default CommentList;","import React, { useState, useEffect } from 'react'\nimport PostInfo from './postinfo'\nimport CommentForm from './commentform'\nimport getCommentsPosts from '../apicalls/getcommentspost'\nimport CommentList from './commentlist'\n\nconst PostDetail = (props) => {\n    const [comments, setComments] = useState([])\n    const [numcomments, setNumComments] = useState(0)\n    const reset = () => {\n        props.setID(-1);\n        setComments([]);\n    }\n    useEffect(() => {\n        if (props.currpost && props.currpost.id && props.currpost.id !== -1)\n            getCommentsPosts(props.currpost.id.toString()).then(resp => { setComments(resp.comments) })\n    }, [props.currpost, numcomments])\n    return (\n        <div className={`postcover ${props.class}`} onClick={() => reset()}>\n            <div className=\"postdetail detail\" onClick={(e) => e.stopPropagation()} style={{ 'backgroundColor': (props.currpost ? props.currpost.color : '') }}>\n                <PostInfo currpost={props.currpost} reset={() => reset()} token={props.token} validated={props.validated} />\n                <CommentList comments={comments} token={props.token} validated={props.validated} incComments={() => setNumComments(numcomments + 1)} />\n                <CommentForm currpost={props.currpost} incComments={() => setNumComments(numcomments + 1)} token={props.token} />\n            </div>\n        </div >\n    )\n}\nexport default PostDetail;","const makePost = (title, text, xpos, ypos, color, token = \"\") => {\n    const resp = fetch(`https://messageboard-back.herokuapp.com/api/posts/make_post/`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'token': token\n        },\n        body: JSON.stringify(\n            {\n                'title': title,\n                'text': text,\n                'xpos': xpos,\n                'ypos': ypos,\n                'color': color\n            }\n        )\n    }).then(resp => resp.json())\n    return resp\n}\n\nexport default makePost;\n","import React, { useState } from 'react'\nimport MakePost from '../apicalls/makepost'\n\nconst PostForm = (props) => {\n    const [title, setTitle] = useState('')\n    const [text, setText] = useState('')\n    const [color, setColor] = useState(0)\n    const colors = ['#ffe6ff', '#ffd6d6', '#fff4e6', '#fdffe6', '#e6ffec', '#e6fffb',]\n    const changeTitle = (newtitle) => {\n        setTitle(newtitle.target.value)\n    }\n    const changeText = (newtext) => {\n        setText(newtext.target.value)\n    }\n    return (\n        <form onSubmit={\n            (e) => {\n                e.preventDefault();\n                console.log(title, text, props.xpos, props.ypos, colors[color], props.token)\n                MakePost(title, text, props.xpos, props.ypos, colors[color], props.token).then(() => props.setmakePost(false));\n                setTitle(''); setText(''); setColor(0);\n            }\n        }>\n            <div className=\"postformtitle\">\n                <h1>Make a Post</h1>\n                <div className=\"exitbutton\" >\n                    <button type=\"button\" onClick={() => {\n                        setTitle(''); setText(''); setColor(0);\n                        props.setmakePost(false)\n                    }} >X</button>\n                </div>\n            </div>\n            <input className=\"posttitleinp\" value={title} onChange={changeTitle} required=\"required\" maxlength=\"50\" /><br />\n            <textarea className=\"postvalinp\" value={text} onChange={changeText} required=\"required\" /><br />\n            <br />\n            {\n                colors.map((val, i) => {\n                    return <span class={`dot ${color === i ? 'selected' : ''}`} style={{ 'backgroundColor': val }} key={i} onClick={() => { setColor(i); }} />\n                })\n            }\n            <br /><br />\n            <input className=\"submitpost\" type=\"submit\" />\n        </form>\n    )\n}\nexport default PostForm;","import React, { useState, useEffect } from 'react'\nimport PostForm from './postform'\n\nconst MakePost = (props) => {\n    const [classN, setClassN] = useState('hidden');\n    useEffect(() => {\n        setClassN(props.class ? 'shown' : 'hidden')\n    }, [props.class])\n    return (\n        <div className={`postcover ${classN}`} onClick={() => { setClassN('hidden'); props.setmakePost(false); }}>\n            <div className=\"postdetail form\" onClick={(e) => e.stopPropagation()}>\n                <PostForm\n                    xpos={props.coords[0]}\n                    ypos={props.coords[1]}\n                    setmakePost={props.setmakePost}\n                    token={props.token}\n                />\n            </div>\n        </div >\n    )\n}\nexport default MakePost;","import React, { useEffect, useState } from 'react'\n\nconst SideBar = (props) => {\n    const hamburger = \"https://cdn-icons-png.flaticon.com/512/3388/3388797.png\"\n    const close = \"https://cdn-icons-png.flaticon.com/512/1/1193.png\"\n    const [years, setYears] = useState([])\n    const [months, setMonths] = useState([])\n    const monthdic = {\n        1: 'January',\n        2: 'February',\n        3: 'March',\n        4: 'April',\n        5: 'May',\n        6: 'June',\n        7: 'July',\n        8: 'August',\n        9: 'September',\n        10: 'October',\n        11: 'November',\n        12: 'December'\n    }\n    useEffect(() => {\n        if (props.dateinfo) {\n            const temp_y = []\n            const temp_m = []\n            for (let i = props.dateinfo.this_year; i >= props.dateinfo.start_year; i--) {\n                temp_y.push(i)\n                let t = []\n                for (let j = (i === props.dateinfo.this_year ? props.dateinfo.this_month : 12); j >= (i === props.dateinfo.start_year ? props.dateinfo.start_month : 1); j--) {\n                    t.push(j)\n                }\n                temp_m.push(t)\n            }\n            setMonths(temp_m)\n            setYears(temp_y)\n        }\n    }, [, props.dateinfo])\n\n    return (\n        <React.Fragment >\n            <div\n                className={`postcover ${props.showsidebar ? \"shown\" : \"hidden\"}`}\n                onClick={() => { props.setShowSidebar(!props.showsidebar) }}\n            >\n                <div className=\"sidebar\" style={{ 'display': `${props.showsidebar ? \"inline-block\" : \"none\"}` }} onClick={(e) => { e.stopPropagation() }}>\n                    <h1>Navigate</h1>\n                    {\n                        props.dateinfo ?\n                            years.map((val, i) => {\n                                return (\n                                    <details open={i === 0} className=\"yeardetail\">\n                                        <summary>{val}</summary>\n                                        {\n                                            months[i].map((m, j) => {\n                                                return (\n                                                    <React.Fragment>\n                                                        <p\n                                                            onClick={() => { props.setMonth(m); props.setYear(val) }}\n                                                            className={(props.year === val && props.month === m) ? \"chosenmonth\" : ''}\n                                                        >\n                                                            {monthdic[m]} {val}\n                                                        </p>\n                                                    </React.Fragment>\n                                                )\n                                            })\n                                        }\n                                    </details>\n                                )\n                            }) :\n                            null\n                    }\n                </div>\n            </div>\n            <button\n                style={{ 'position': 'fixed', 'zIndex': 2, 'margin-left': `${props.showsidebar ? 'max(170px, calc(20% - 30px))' : '10px'}` }}\n                onClick={() => { props.setShowSidebar(!props.showsidebar) }}\n                className=\"sidebarbutton\"\n            ><img className=\"hamburger\" src={`${props.showsidebar ? close : hamburger}`} /></button>\n        </React.Fragment>\n    )\n}\nexport default SideBar;","import React, { useState } from 'react';\n\nconst Admin = (props) => {\n    const [showform, setShowForm] = useState(false);\n    const [pword, setPword] = useState('');\n    const changePword = (newpword) => {\n        setPword(newpword.target.value)\n    }\n    return (\n        <div className=\"adminform\">\n            <form\n                style={{ 'display': `${showform ? \"\" : \"none\"}` }}\n                onSubmit={(e) => {\n                    e.preventDefault(); setShowForm(false); props.setToken(pword); setPword('');\n                }}>\n                <input value={pword} onChange={(e) => changePword(e)} placeholder={\"Admin Password\"} />\n            </form>\n            <button className=\"login\" onClick={() => setShowForm(true)}\n            ><img src=\"https://cdn-icons-png.flaticon.com/512/747/747335.png\" /></button>\n        </div>\n    )\n}\nexport default Admin;","const getPostsMonth = (year, month) => {\n    const resp = fetch(`https://messageboard-back.herokuapp.com/api/posts/get_posts_month/`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(\n            {\n                'year': year,\n                'month': month,\n            }\n        )\n    }).then(resp => resp.json())\n    return resp\n}\n\nexport default getPostsMonth;\n","import React, { useState, useEffect } from 'react';\nimport Main from './main'\nimport Login from './login'\nimport PostDetail from './postdetail'\nimport MakePost from './makepost'\nimport SideBar from './sidebar'\nimport Admin from './admin'\nimport getPostsMonth from '../apicalls/getpostsmonth'\n\nconst MainContainer = () => {\n    const sha512 = require('js-sha512');\n    const today = new Date();\n    const start_month = 9\n    const start_year = 2021\n    const this_month = today.getMonth() + 1\n    const this_year = today.getFullYear();\n    const [locked, setLocked] = useState(false);\n    const [validated, setValidated] = useState(false);\n    const [showsidebar, setShowSidebar] = useState(false);\n    const [token, setToken] = useState('');\n    const [month, setMonth] = useState(this_month)\n    const [year, setYear] = useState(this_year)\n    const [postID, setID] = useState(-1);\n    const [posts, setPosts] = useState([])\n    const [currpost, setCurrpost] = useState([])\n    const [makePost, setmakePost] = useState(false)\n    const [coords, setCoords] = useState([])\n    const checkhash = '20f0cfdc8935408bb8940b47de8838a8da6fa20c98b4931fefcb59febdb23976f8b1239706b70219b46d65945fc4b6620a97dd028faf7ae2a79dfe915912cb44'\n    const checkpword = 'bd9abafc721a3cb0472b1f5b6e214648b3b5bf1a5bac41088674794193b0dfcacedc25411011b17279c0e3266040ca1ef6abf734f0f0762eb0e26b85b4030cd6'\n\n    const verifyToken = () => {\n        return (\n            checkhash === sha512(token)\n        )\n    }\n\n    const dateinfo = {\n        start_month: start_month,\n        start_year: start_year,\n        this_month: this_month,\n        this_year: this_year\n    }\n\n    useEffect(() => { setValidated(verifyToken()) }, [, token])\n\n    useEffect(() => {\n        getPostsMonth(String(year), String(month)).then(resp => { setPosts(resp.posts) });\n    }, [, makePost, year, month, postID]);\n\n    //update currentpost as postID or posts changes: meaning if a posts is updated, posts will be displayed\n    useEffect(() => {\n        const val = posts.find(function (val) {\n            return val.id === postID;\n        });\n        setCurrpost(val);\n    }, [postID, posts])\n    const checkPword = (pword) => {\n        setLocked(checkpword === sha512(pword.toLowerCase()))\n    }\n    return (\n        <React.Fragment>{locked ?\n            <React.Fragment>{\n                !validated ?\n                    <Admin\n                        setToken={(val) => setToken(val)}\n                    /> :\n                    null\n            }\n                <SideBar\n                    showsidebar={showsidebar}\n                    setShowSidebar={(val) => setShowSidebar(val)}\n                    dateinfo={dateinfo}\n                    setMonth={(val) => { setMonth(val) }}\n                    setYear={(val) => { setYear(val) }}\n                    year={year}\n                    month={month}\n                />\n                <MakePost\n                    class={makePost}\n                    setmakePost={(val) => setmakePost(val)}\n                    coords={coords}\n                    token={token}\n                />\n                <PostDetail\n                    setID={(id) => setID(id)}\n                    postID={postID}\n                    class={postID != -1 ? \"shown\" : \"hidden\"}\n                    currpost={currpost}\n                    token={token}\n                    validated={validated}\n                />\n                <Main\n                    setID={(id) => setID(id)}\n                    posts={posts}\n                    setmakePost={(val) => setmakePost(val)}\n                    setCoords={(val) => { setCoords(val) }}\n                    valid={this_month === month && this_year === year}\n                /> </React.Fragment> : <Login setLocked={(val) => setLocked(val)} checkpword={(val) => checkPword(val)} />}\n        </React.Fragment>\n    )\n}\n\nexport default MainContainer;\n","import React from 'react'\nimport './App.css';\nimport MainContainer from './components/maincontainer'\n\n//if looking at detail, show postcover and postdetail\nfunction App() {\n  return (\n    <MainContainer />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}