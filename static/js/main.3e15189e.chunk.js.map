{"version":3,"sources":["components/post.js","components/main.js","components/login.js","apicalls/removepost.js","apicalls/flagpost.js","components/postinfo.js","apicalls/makecomment.js","components/commentform.js","apicalls/getcommentspost.js","apicalls/removecomment.js","apicalls/flagcomment.js","components/commententry.js","components/commentlist.js","components/postdetail.js","apicalls/makepost.js","components/postform.js","components/makepost.js","components/sidebar.js","components/admin.js","apicalls/getpostsmonth.js","components/maincontainer.js","App.js","reportWebVitals.js","index.js"],"names":["Post","props","useState","style","setStyle","useEffect","ypos","xpos","color","className","onClick","e","setID","id","stopPropagation","clickHandler","title","Main","container","useRef","current","getElement","scrollTo","ref","hideScrollbars","valid","clickX","clientX","scrollLeft","clickY","clientY","scrollTop","setCoords","setmakePost","posts","map","val","is_admin","Login","pword","setPword","currtab","setCurrTab","factlist","tabs","href","target","rel","myth","index","Fragment","placeholder","value","onChange","newpword","required","maxlength","type","preventDefault","checkpword","removePost","token","resp","fetch","method","headers","then","json","flagPost","PostInfo","flagged","setFlagged","currpost","src","validated","RemovePost","reset","FlagPost","date","text","makeComment","post","body","JSON","stringify","CommentForm","setText","newtext","MakeComment","incComments","getCommentsPost","removeComment","flagComment","CommentEntry","RemoveComment","FlagComment","CommentList","comments","i","PostDetail","setComments","numcomments","setNumComments","getCommentsPosts","toString","class","makePost","PostForm","setTitle","setColor","colors","onSubmit","console","log","MakePost","newtitle","classN","setClassN","coords","SideBar","years","setYears","months","setMonths","monthdic","dateinfo","temp_y","temp_m","this_year","start_year","push","t","j","this_month","start_month","showsidebar","setShowSidebar","open","m","setMonth","setYear","year","month","Admin","showform","setShowForm","setToken","getPostsMonth","MainContainer","sha512","require","today","Date","getMonth","getFullYear","locked","setLocked","setValidated","postID","setPosts","setCurrpost","String","find","checkPword","toLowerCase","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e15189e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nconst Post = (props) => {\n    const [style, setStyle] = useState()\n    const clickHandler = (e) => {\n        props.setID(props.id)\n        e.stopPropagation();\n    }\n    useEffect(() => {\n        setStyle({ 'top': `${props.ypos}px`, 'left': `${props.xpos}px`, 'backgroundColor': `${props.color}` })\n    }, [, props])\n    return (\n        <div className=\"element\" onClick={(e) => clickHandler(e)} style={style}>\n            <p>\n                {props.title}\n            </p>\n        </div>\n    )\n}\nexport default Post","import React, { useState, useRef, useEffect } from 'react'\nimport ScrollContainer from 'react-indiana-drag-scroll'\nimport Post from './post'\n\nconst Main = (props) => {\n    const container = useRef(null);\n    const clickHandler = (e) => {\n        var clickX = e.clientX + container.current.getElement().scrollLeft;\n        var clickY = e.clientY + container.current.getElement().scrollTop;\n        props.setCoords([clickX, clickY])\n        props.setmakePost(true)\n    }\n\n    useEffect(() => {\n        if (container.current) {\n            //maybe we don't need depending on how it looks later\n            container.current.getElement().scrollTo(800, 512);\n        }\n    }, []);\n    return (\n        <ScrollContainer className=\"scroll-container\" ref={container} hideScrollbars={false}>\n            <div className=\"main\" onClick={(e) => { if (props.valid) { clickHandler(e); } }}>\n                {\n                    props.posts ?\n                        props.posts.map((val, e) => {\n                            return (<Post\n                                id={val.id}\n                                title={val.title}\n                                xpos={val.xpos}\n                                ypos={val.ypos}\n                                color={val.color}\n                                is_admin={val.is_admin}\n                                setID={props.setID}\n                            />)\n                        }) :\n                        null\n                }\n            </div>\n        </ScrollContainer >\n    )\n}\n\nexport default Main;","import React, { useState } from 'react'\n\nconst Login = (props) => {\n    const [pword, setPword] = useState('')\n    const changePword = (newpword) => {\n        setPword(newpword.target.value)\n    }\n    const [currtab, setCurrTab] = useState(0);\n    const mythlist = [\n        'Myth: Eating disorders aren’t serious illnesses.',\n        'Myth: Eating disorders are just about food.',\n        'Myth: Eating disorders are a women’s illness.',\n        'Myth: Eating disorders don’t develop until the teenage years.',\n        'Myth: Only very thin people have an eating disorder.',\n        'Myth: You can tell if someone has an eating disorder by looking at them.',\n        'Myth: Eating disorders are caused by the media.',\n        'Myth: Eating disorders are a result of dysfunctional families.',\n        'Myth: recovery from eating disorders is rare.'\n    ]\n    const factlist = [\n        'Truth: Anorexia nervosa, bulimia nervosa, binge eating disorder and eating disorder not otherwise specified (EDNOS) are very real and very serious mental illnesses. Each disorder has clear diagnostic criteria in the Diagnostic and Statistical Manual, the go-to diagnostic reference for mental healthcare professionals. Another reason to take eating disorders seriously is that they can be deadly. Anorexia nervosa has the highest mortality rate of any psychiatric disorder. In fact, women ages 15 to 24 years of age who suffer from anorexia nervosa are 12 times more likely to die from the illness than any other cause of death.',\n        'Truth: While eating disorders generally involve obsession with calories, weight or shape, these illnesses are rooted in biological, psychological and sociocultural aspects. Restriction, bingeing, purging or over-exercise behaviors usually signify an attempt to control something of substance in the individual’s life. Because friends and family mistakenly believe that eating disorders are just about food, they will often encourage their loved ones to “just eat more,” “just eat less,” or “just eat healthier” to be “cured” of this illness. In reality, eating disorders often require some combination of medical, psychiatric, therapeutic and dietary intervention to achieve full recovery.',\n        'Truth: While research shows that eating disorders affect significantly more women than men, these illnesses occur in men and boys as well. While males used to represent about 10 percent of individuals with eating disorders, a recent Harvard study found that closer to 25 percent of individuals presenting for eating disorder treatment are male. The widespread belief that eating disorders only affect women and girls can prevent accurate diagnosis of an eating disorder in a man or boy, even among healthcare experts.',\n        'Truth: Consider this—research found that up to 60 percent of girls between the ages of 6 and 12 are concerned about their weight or about becoming too fat, and that this concern endures through life.*** Not surprisingly, the incidence of eating disorders in children is on the rise. Between 1999 and 2006, hospitalizations for eating disorders in children 12 and younger rose 119 percent, according to a 2010 study by the American Academy of Pediatrics.',\n        'Truth: While anorexia is characterized by extreme low weight, many individuals struggling with bulimia, binge eating disorder and EDNOS are normal-weighted. The misconception that an eating disorder can only occur if someone is very thin contributes to misdiagnosis or delayed diagnosis in many cases, even among those patients seeking support from medical and mental healthcare professionals. Unfortunately, many healthcare experts lack eating disorder exposure and training, which highlights the important role of eating disorder specialists to ensure effective diagnosis and early intervention.',\n        'Truth: People who suffer with eating disorders come in all shapes and sizes.  The media and other public discussions about eating disorders often focus on a specific diagnoses: anorexia, wherein sufferers often display the symptom of being severely underweight.  Individuals who suffer from eating disorders can be of any weight, and they can fluctuate in weight',\n        'Truth: Many people are exposed to the media on a daily basis but only a small percentage of them actually develop eating disorders.  Eating disorders are complex and serious illnesses that have biological, genetic and psychological roots.  The media can certainly impact how a person feels about their looks, and promote a great deal of pressure to look a certain way, but the media does not cause eating disorders.',\n        'Truth: Historically, parents, especially mothers, have been blamed for mental illnesses, including eating disorders.  However parents do not cause eating disorders.  Eating disorders are complex disorders and it is known that a person’s risk for developing an eating disorders is due in large part to genetic factors.  Parents, or other caretakers and supports play an integral role in helping a loved one with an eating disorder to recover.',\n        'Truth: Recovery is absolutely possible.  Due to the complexity of eating disorders, recovery can take months or years, but with treatment, many people do recover.'\n    ]\n    const tabs = [\n        <div>\n            <h1>Find Health Center Profiles <a href=\"https://nyuad.nyu.edu/en/about/leadership-and-administration/office-of-the-vice-chancellor/student-affairs/health-center.html\" target=\"_blank\" rel=\"noreferrer\">Here</a></h1>\n            <h2>Health Center</h2>\n            <a href=\"mailto:nyuad.healthcenter@nyu.edu\"><h3>nyuad.healthcenter@nyu.edu</h3></a>\n            <h2>Wellness Exchange</h2>\n            <a href=\"mailto:wellness.exchange@nyu.edu\"><h3>wellness.exchange@nyu.edu</h3></a>\n            <h2>Dining Services</h2>\n            <a href=\"mailto:nyuad.dining@nyu.edu\"><h3>nyuad.dining@nyu.edu</h3></a>\n        </div>,\n        <div className=\"myths\">\n            {\n                mythlist.map((myth,index)=>{\n                    return(\n                        <React.Fragment>\n                            <h3>{myth}</h3>\n                             <h3>{factlist[index]}</h3>\n                        </React.Fragment>\n                    )\n                })\n            }\n            <h5>Courtesy of <a href=\"https://www.eatingrecoverycenter.com/resources/eating-disorder-facts-myths\">Eating Recovery Center</a></h5>\n        </div>,\n    ]\n    const tabnames = [\n        \"Available Resources\",\n        \"Myths\",\n    ]\n    return (\n        <div className=\"detailcomp\">\n            <form className=\"mainblock\">\n                <input className=\"posttitleinp loginput\" placeholder=\"Enter Password\" value={pword} onChange={changePword} required=\"required\" maxlength=\"50\" />\n                <input className=\"passinput\" type=\"submit\" onClick={(e) => { e.preventDefault(); props.checkpword(pword) }}></input>\n            </form>\n            <div className=\"edinfo\">\n                <h1>Welcome To MoreThanFood!</h1>\n                <div className=\"tabs\">\n                    {\n                        tabnames.map((val, index)=>{\n                            return <span className={currtab===index?\"thistab\":\"\"} onClick={()=>setCurrTab(index)}>{val}</span>\n                        })\n                    }\n                </div>\n                {\n                    tabs[currtab]\n                }\n            </div>\n        </div>\n    )\n}\nexport default Login;\n","const removePost = (id, token = \"\") => {\n    const resp = fetch(`https://messageboard-back.herokuapp.com/api/posts/${id}/remove_post/`, {\n        method: 'DELETE',\n        headers: {\n            'Content-Type': 'application/json',\n            'token': token\n        }\n    }).then(resp => resp.json())\n    return resp\n}\n\nexport default removePost;\n","const flagPost = (id) => {\n    const resp = fetch(`https://messageboard-back.herokuapp.com/api/posts/${id}/flag_post/`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    }).then(resp => resp.json())\n    return resp\n}\n\nexport default flagPost;\n","import React, { useState } from 'react'\nimport RemovePost from '../apicalls/removepost'\nimport FlagPost from '../apicalls/flagpost'\n\nconst PostInfo = (props) => {\n    const [flagged, setFlagged] = useState(false)\n    return (\n        <div>\n            <div className=\"titletext\">\n                <h1>{props.currpost ? props.currpost.title : ''}</h1>\n                <div className=\"verified\">\n                    <div className=\"hiddeninfo\">\n                        <span>Verified User</span>\n                    </div>\n                    {props.currpost && props.currpost.is_admin ?\n                        <img className=\"checkmark\" src=\"https://cdn-icons-png.flaticon.com/512/3699/3699516.png\" /> :\n                        null\n                    }\n                </div>\n                <div className=\"delete\">\n                    {props.currpost && props.validated ?\n                        <img className=\"checkmark\" onClick={() => { RemovePost(props.currpost.id, props.token).then(() => props.reset()) }} src=\"https://cdn-icons-png.flaticon.com/512/3096/3096687.png\" /> :\n                        <img className=\"checkmark\" onClick={() => { FlagPost(props.currpost.id); setFlagged(true) }} style={{ 'display': `${flagged ? \"none\" : \"\"}` }} src=\"https://cdn-icons-png.flaticon.com/512/985/985382.png\" />}\n                </div>\n                <div className=\"exitbutton\" >\n                    {props.currpost ? <button onClick={() => props.reset()} >X</button> : null}\n                </div>\n            </div>\n            <h2>{props.currpost ? props.currpost.date : ''}</h2>\n            <h2>{props.currpost ? props.currpost.text : ''}</h2>\n            { props.currpost ? <hr /> : null}\n        </div >\n    )\n}\nexport default PostInfo;\n","const makeComment = (text, post, token = \"\") => {\n    const resp = fetch(`https://messageboard-back.herokuapp.com/api/comments/make_comment/`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'token': token\n        },\n        body: JSON.stringify(\n            {\n                'text': text,\n                'post': post,\n            }\n        )\n    }).then(resp => resp.json())\n    return resp\n}\n\nexport default makeComment;\n","import React, { useState } from 'react'\nimport MakeComment from '../apicalls/makecomment'\n\nconst CommentForm = (props) => {\n    const [text, setText] = useState('')\n    const changeText = (newtext) => {\n        setText(newtext.target.value)\n    }\n    return (\n        <div className=\"commentform\">\n            {props.currpost ?\n                <form>\n                    <br />\n                    <textarea value={text} onChange={changeText} className=\"postvalinp\" /><br /><br />\n                    <input type=\"submit\" className=\"submitpost\" onClick={(e) => {\n                        e.preventDefault();\n                        MakeComment(text, props.currpost.id, props.token).then(() => props.incComments());\n                        setText('');\n                    }} />\n                </form>\n                : null}\n        </div>\n    )\n}\nexport default CommentForm;","const getCommentsPost = (post) => {\n    const resp = fetch(`https://messageboard-back.herokuapp.com/api/comments/get_comments_post/`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(\n            {\n                'post': post\n            }\n        )\n    }).then(resp => resp.json())\n    return resp\n}\n\nexport default getCommentsPost;\n","const removeComment = (id, token = \"\") => {\n    const resp = fetch(`https://messageboard-back.herokuapp.com/api/comments/${id}/remove_comment/`, {\n        method: 'DELETE',\n        headers: {\n            'Content-Type': 'application/json',\n            'token': token\n        }\n    }).then(resp => resp.json())\n    return resp\n}\n\nexport default removeComment;\n","const flagComment = (id) => {\n    const resp = fetch(`https://messageboard-back.herokuapp.com/api/comments/${id}/flag_comment/`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    }).then(resp => resp.json())\n    return resp\n}\n\nexport default flagComment;\n","import React, { useState } from 'react'\nimport RemoveComment from '../apicalls/removecomment'\nimport FlagComment from '../apicalls/flagcomment'\n\nconst CommentEntry = (props) => {\n    const [flagged, setFlagged] = useState(false)\n    return (\n        <div className=\"commenttext\">\n            <div className=\"username\">\n                <p>{props.val.is_admin ? \"Verified Commenter\" : \"Anonymous Commenter\"} ({props.val.date})</p>\n                <div className=\"verified\">\n                    <div className=\"hiddeninfo\">\n                        <span>Verified User</span>\n                    </div>\n                    {props.val.is_admin ? <img className=\"checkmark\" src=\"https://cdn-icons-png.flaticon.com/512/3699/3699516.png\" /> : null}\n                </div>\n                <div className=\"delete\">\n                    {props.validated ?\n                        <img className=\"checkmark\" onClick={() => { RemoveComment(props.val.id, props.token).then(() => props.incComments()) }} src=\"https://cdn-icons-png.flaticon.com/512/3096/3096687.png\" /> :\n                        <img className=\"checkmark\" onClick={() => { FlagComment(props.val.id); setFlagged(true) }} style={{ 'display': `${flagged ? \"none\" : ''}` }} src=\"https://cdn-icons-png.flaticon.com/512/985/985382.png\" />\n                    }\n                </div>\n            </div>\n            <p>{props.val.text}</p>\n        </div>\n    )\n}\nexport default CommentEntry;","import React, { useRef } from 'react'\nimport CommentEntry from './commententry'\n\nconst CommentList = (props) => {\n    return (\n        <div className=\"commentdiv\">\n            {\n                props.comments !== [] ?\n                    props.comments.map((val, i) => {\n                        return (\n                            <CommentEntry val={val} incComments={props.incComments} validated={props.validated} token={props.token} />\n                        )\n                    }) : null\n            }\n        </div>\n    )\n}\nexport default CommentList;","import React, { useState, useEffect } from 'react'\nimport PostInfo from './postinfo'\nimport CommentForm from './commentform'\nimport getCommentsPosts from '../apicalls/getcommentspost'\nimport CommentList from './commentlist'\n\nconst PostDetail = (props) => {\n    const [comments, setComments] = useState([])\n    const [numcomments, setNumComments] = useState(0)\n    const reset = () => {\n        props.setID(-1);\n        setComments([]);\n    }\n    useEffect(() => {\n        if (props.currpost && props.currpost.id && props.currpost.id !== -1)\n            getCommentsPosts(props.currpost.id.toString()).then(resp => { setComments(resp.comments) })\n    }, [props.currpost, numcomments])\n    return (\n        <div className={`postcover ${props.class}`} onClick={() => reset()}>\n            <div className=\"postdetail detail\" onClick={(e) => e.stopPropagation()} style={{ 'backgroundColor': (props.currpost ? props.currpost.color : '') }}>\n                <PostInfo currpost={props.currpost} reset={() => reset()} token={props.token} validated={props.validated} />\n                <CommentList comments={comments} token={props.token} validated={props.validated} incComments={() => setNumComments(numcomments + 1)} />\n                <CommentForm currpost={props.currpost} incComments={() => setNumComments(numcomments + 1)} token={props.token} />\n            </div>\n        </div >\n    )\n}\nexport default PostDetail;","const makePost = (title, text, xpos, ypos, color, token = \"\") => {\n    const resp = fetch(`https://messageboard-back.herokuapp.com/api/posts/make_post/`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'token': token\n        },\n        body: JSON.stringify(\n            {\n                'title': title,\n                'text': text,\n                'xpos': xpos,\n                'ypos': ypos,\n                'color': color\n            }\n        )\n    }).then(resp => resp.json())\n    return resp\n}\n\nexport default makePost;\n","import React, { useState } from 'react'\nimport MakePost from '../apicalls/makepost'\n\nconst PostForm = (props) => {\n    const [title, setTitle] = useState('')\n    const [text, setText] = useState('')\n    const [color, setColor] = useState(0)\n    const colors = ['#ffe6ff', '#ffd6d6', '#fff4e6', '#fdffe6', '#e6ffec', '#e6fffb',]\n    const changeTitle = (newtitle) => {\n        setTitle(newtitle.target.value)\n    }\n    const changeText = (newtext) => {\n        setText(newtext.target.value)\n    }\n    return (\n        <form onSubmit={\n            (e) => {\n                e.preventDefault();\n                console.log(title, text, props.xpos, props.ypos, colors[color], props.token)\n                MakePost(title, text, props.xpos, props.ypos, colors[color], props.token).then(() => props.setmakePost(false));\n                setTitle(''); setText(''); setColor(0);\n            }\n        }>\n            <div className=\"postformtitle\">\n                <h1>Make a Post</h1>\n                <div className=\"exitbutton\" >\n                    <button type=\"button\" onClick={() => {\n                        setTitle(''); setText(''); setColor(0);\n                        props.setmakePost(false)\n                    }} >X</button>\n                </div>\n            </div>\n            <input placeholder=\"Enter a Title...\" className=\"posttitleinp\" value={title} onChange={changeTitle} required=\"required\" maxlength=\"50\" /><br />\n            <textarea placeholder=\"Enter Some Text...\" className=\"postvalinp\" value={text} onChange={changeText} required=\"required\" /><br />\n            <br />\n            {\n                colors.map((val, i) => {\n                    return <span class={`dot ${color === i ? 'selected' : ''}`} style={{ 'backgroundColor': val }} key={i} onClick={() => { setColor(i); }} />\n                })\n            }\n            <br /><br />\n            <input className=\"submitpost\" type=\"submit\" />\n        </form>\n    )\n}\nexport default PostForm;","import React, { useState, useEffect } from 'react'\nimport PostForm from './postform'\n\nconst MakePost = (props) => {\n    const [classN, setClassN] = useState('hidden');\n    useEffect(() => {\n        setClassN(props.class ? 'shown' : 'hidden')\n    }, [props.class])\n    return (\n        <div className={`postcover ${classN}`} onClick={() => { setClassN('hidden'); props.setmakePost(false); }}>\n            <div className=\"postdetail form\" onClick={(e) => e.stopPropagation()}>\n                <PostForm\n                    xpos={props.coords[0]}\n                    ypos={props.coords[1]}\n                    setmakePost={props.setmakePost}\n                    token={props.token}\n                />\n            </div>\n        </div >\n    )\n}\nexport default MakePost;","import React, { useEffect, useState } from 'react'\n\nconst SideBar = (props) => {\n    const hamburger = \"https://cdn-icons-png.flaticon.com/512/3388/3388797.png\"\n    const close = \"https://cdn-icons-png.flaticon.com/512/1/1193.png\"\n    const [years, setYears] = useState([])\n    const [months, setMonths] = useState([])\n    const monthdic = {\n        1: 'January',\n        2: 'February',\n        3: 'March',\n        4: 'April',\n        5: 'May',\n        6: 'June',\n        7: 'July',\n        8: 'August',\n        9: 'September',\n        10: 'October',\n        11: 'November',\n        12: 'December'\n    }\n    useEffect(() => {\n        if (props.dateinfo) {\n            const temp_y = []\n            const temp_m = []\n            for (let i = props.dateinfo.this_year; i >= props.dateinfo.start_year; i--) {\n                temp_y.push(i)\n                let t = []\n                for (let j = (i === props.dateinfo.this_year ? props.dateinfo.this_month : 12); j >= (i === props.dateinfo.start_year ? props.dateinfo.start_month : 1); j--) {\n                    t.push(j)\n                }\n                temp_m.push(t)\n            }\n            setMonths(temp_m)\n            setYears(temp_y)\n        }\n    }, [, props.dateinfo])\n\n    return (\n        <React.Fragment >\n            <div\n                className={`postcover ${props.showsidebar ? \"shown\" : \"hidden\"}`}\n                onClick={() => { props.setShowSidebar(!props.showsidebar) }}\n            >\n                <div className=\"sidebar\" style={{ 'display': `${props.showsidebar ? \"inline-block\" : \"none\"}` }} onClick={(e) => { e.stopPropagation() }}>\n                    <h1>Navigate</h1>\n                    {\n                        props.dateinfo ?\n                            years.map((val, i) => {\n                                return (\n                                    <details open={i === 0} className=\"yeardetail\">\n                                        <summary>{val}</summary>\n                                        {\n                                            months[i].map((m, j) => {\n                                                return (\n                                                    <React.Fragment>\n                                                        <p\n                                                            onClick={() => { props.setMonth(m); props.setYear(val) }}\n                                                            className={(props.year === val && props.month === m) ? \"chosenmonth\" : ''}\n                                                        >\n                                                            {monthdic[m]} {val}\n                                                        </p>\n                                                    </React.Fragment>\n                                                )\n                                            })\n                                        }\n                                    </details>\n                                )\n                            }) :\n                            null\n                    }\n                </div>\n            </div>\n            <button\n                style={{ 'position': 'fixed', 'zIndex': 2, 'margin-left': `${props.showsidebar ? 'max(170px, calc(20% - 30px))' : '10px'}` }}\n                onClick={() => { props.setShowSidebar(!props.showsidebar) }}\n                className=\"sidebarbutton\"\n            ><img className=\"hamburger\" src={`${props.showsidebar ? close : hamburger}`} /></button>\n        </React.Fragment>\n    )\n}\nexport default SideBar;","import React, { useState } from 'react';\n\nconst Admin = (props) => {\n    const [showform, setShowForm] = useState(false);\n    const [pword, setPword] = useState('');\n    const changePword = (newpword) => {\n        setPword(newpword.target.value)\n    }\n    return (\n        <div className=\"adminform\">\n            <form\n                style={{ 'display': `${showform ? \"\" : \"none\"}` }}\n                onSubmit={(e) => {\n                    e.preventDefault(); setShowForm(false); props.setToken(pword); setPword('');\n                }}>\n                <input value={pword} onChange={(e) => changePword(e)} placeholder={\"Admin Password\"} />\n            </form>\n            <button className=\"login\" onClick={() => setShowForm(true)}\n            ><img src=\"https://cdn-icons-png.flaticon.com/512/747/747335.png\" /></button>\n        </div>\n    )\n}\nexport default Admin;","const getPostsMonth = (year, month) => {\n    const resp = fetch(`https://messageboard-back.herokuapp.com/api/posts/get_posts_month/`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(\n            {\n                'year': year,\n                'month': month,\n            }\n        )\n    }).then(resp => resp.json())\n    return resp\n}\n\nexport default getPostsMonth;\n","import React, { useState, useEffect } from 'react';\nimport Main from './main'\nimport Login from './login'\nimport PostDetail from './postdetail'\nimport MakePost from './makepost'\nimport SideBar from './sidebar'\nimport Admin from './admin'\nimport getPostsMonth from '../apicalls/getpostsmonth'\n\nconst MainContainer = () => {\n    const sha512 = require('js-sha512');\n    const today = new Date();\n    const start_month = 11\n    const start_year = 2021\n    const this_month = today.getMonth() + 1\n    const this_year = today.getFullYear();\n    const [locked, setLocked] = useState(false);\n    const [validated, setValidated] = useState(false);\n    const [showsidebar, setShowSidebar] = useState(false);\n    const [token, setToken] = useState('');\n    const [month, setMonth] = useState(this_month)\n    const [year, setYear] = useState(this_year)\n    const [postID, setID] = useState(-1);\n    const [posts, setPosts] = useState([])\n    const [currpost, setCurrpost] = useState([])\n    const [makePost, setmakePost] = useState(false)\n    const [coords, setCoords] = useState([])\n    const checkhash = '20f0cfdc8935408bb8940b47de8838a8da6fa20c98b4931fefcb59febdb23976f8b1239706b70219b46d65945fc4b6620a97dd028faf7ae2a79dfe915912cb44'\n    const checkpword = 'bd9abafc721a3cb0472b1f5b6e214648b3b5bf1a5bac41088674794193b0dfcacedc25411011b17279c0e3266040ca1ef6abf734f0f0762eb0e26b85b4030cd6'\n\n    const verifyToken = () => {\n        return (\n            checkhash === sha512(token)\n        )\n    }\n\n    const dateinfo = {\n        start_month: start_month,\n        start_year: start_year,\n        this_month: this_month,\n        this_year: this_year\n    }\n\n    useEffect(() => { setValidated(verifyToken()) }, [, token])\n\n    useEffect(() => {\n        getPostsMonth(String(year), String(month)).then(resp => { setPosts(resp.posts) });\n    }, [, makePost, year, month, postID]);\n\n    //update currentpost as postID or posts changes: meaning if a posts is updated, posts will be displayed\n    useEffect(() => {\n        const val = posts.find(function (val) {\n            return val.id === postID;\n        });\n        setCurrpost(val);\n    }, [postID, posts])\n    const checkPword = (pword) => {\n        setLocked(checkpword === sha512(pword.toLowerCase()))\n    }\n    return (\n        <React.Fragment>{locked ?\n            <React.Fragment>{\n                !validated ?\n                    <Admin\n                        setToken={(val) => setToken(val)}\n                    /> :\n                    null\n            }\n                <SideBar\n                    showsidebar={showsidebar}\n                    setShowSidebar={(val) => setShowSidebar(val)}\n                    dateinfo={dateinfo}\n                    setMonth={(val) => { setMonth(val) }}\n                    setYear={(val) => { setYear(val) }}\n                    year={year}\n                    month={month}\n                />\n                <MakePost\n                    class={makePost}\n                    setmakePost={(val) => setmakePost(val)}\n                    coords={coords}\n                    token={token}\n                />\n                <PostDetail\n                    setID={(id) => setID(id)}\n                    postID={postID}\n                    class={postID != -1 ? \"shown\" : \"hidden\"}\n                    currpost={currpost}\n                    token={token}\n                    validated={validated}\n                />\n                <Main\n                    setID={(id) => setID(id)}\n                    posts={posts}\n                    setmakePost={(val) => setmakePost(val)}\n                    setCoords={(val) => { setCoords(val) }}\n                    valid={this_month === month && this_year === year}\n                /> </React.Fragment> : <Login setLocked={(val) => setLocked(val)} checkpword={(val) => checkPword(val)} />}\n        </React.Fragment>\n    )\n}\n\nexport default MainContainer;\n","import React from 'react'\nimport './App.css';\nimport MainContainer from './components/maincontainer'\n\n//if looking at detail, show postcover and postdetail\nfunction App() {\n  return (\n    <MainContainer />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}